<!----------------------------------------------------------------------------
  Parent.h.htm

  Published on: Wed May  3 21:53:38 2017

  Arpit Shah, CSE687 - Object Oriented Design, Spring 2017

  Note:
  - Markup characters in the text part, enclosed in <pre>...</pre> have to be
    replaced with escape sequences, e.g., < becomes &lt; and > becomes &gt;
  - Be careful that you don't replace genuine markup characters with escape 
    sequences, e.g., everything outside of the <pre>...</pre> section.
----------------------------------------------------------------------------->
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" type="text/css" href="mystyle.css.txt">
  <script type="text/javascript" src="myscript.js.txt"></script>
</head>
<body>
  <h3>Parent.h</h3>
  <hr />
  <div class="indent">
    <h4>Dependencies:</h4><a href="Child.h.htm">Child.h</a><br><a href="Child2.h.htm">Child2.h</a><br>  </div>
  <hr />
<pre>#ifndef SCOPESTACK_H
#define SCOPESTACK_H
#pragma once


#include "Child2.h"
#include "Child.h"
#include "Invalid.h"
#include &lt;list&gt;


namespace parent1
{
	namespace parent2
	{
		template&lt;typename T&gt;
		class Parent</pre><table><tr><td valign="top"><button id="button0" onclick='clickEvent(this,"placeholder0")'> > </button> </td><td valign="top"><div id="placeholder0" style="display: none"><pre> {
			using namespace ChildTest;
		public:
			void push(const T& item);
			T pop();
		private:
			data d;
			std::list&lt;T&gt; stack;
			Child child;
		};
</pre></div></td></tr></table><pre>

		template&lt;class T&gt;
		void Parent&lt;T&gt;::push(const T& item)
</pre><table><tr><td valign="top"><button id="button1" onclick='clickEvent(this,"placeholder1")'> > </button> </td><td valign="top"><div id="placeholder1" style="display: none"><pre>		{
			stack.push_back(item);
		}

		template&lt;class T&gt;
		T Parent&lt;T&gt;::pop()
</pre><table><tr><td valign="top"><button id="button2" onclick='clickEvent(this,"placeholder2")'> > </button> </td><td valign="top"><div id="placeholder2" style="display: none"><pre>		{
			T item = stack.back();
			stack.pop_back();
			globalData++;
			return item;
		}
</pre></div></td></tr></table><pre>	}
</pre></div></td></tr></table><pre>
}
#endif

</pre>
</body>
</html>